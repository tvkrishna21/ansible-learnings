---
- hosts: localhost
  connection: local
  tasks:
  - name: start an instance with a public IP address
    amazon.aws.ec2_instance:
      name: "{{ item.name }}"
      key_name: "first-key-pair"
      # vpc_subnet_id: subnet-013744e41e8088axx
      instance_type: t3.micro
      security_group: launch-wizard-4
      region: ap-south-1
      aws_access_key: "{{ec2_access_key}}"  # From vault as defined
      aws_secret_key: "{{ec2_secret_key}}"  # From vault as defined      
      network:
        assign_public_ip: true
      image_id: "{{ item.image }}"
      tags:
        environment: "{{ item.name }}"
    loop:
      - { image: "ami-0144277607031eca2", name: "Centos-instance-1" }
      - { image: "ami-0f918f7e67a3323f0", name: "Ubuntu-instance-1" }
      - { image: "ami-0f918f7e67a3323f0", name: "Ubuntu-instance-2" }
###############################################################################################################################################################################
#      - { image: "ami-0144277607031eca2" } # If we use this format of loop without name then ansible will create only 2 instances
#      - { image: "ami-0f918f7e67a3323f0" } # 1st with centos, 2nd ubuntu becoz Ansible's idempotency nature after 2nd instance creation
#      - { image: "ami-0f918f7e67a3323f0" } # it will treat  ubuntu image is already available and will not create the 3rd instance
###############################################################################################################################################################################
# Hence we need to create the vm's with image id and name format to make it unique #

